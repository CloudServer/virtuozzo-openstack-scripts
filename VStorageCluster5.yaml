heat_template_version: 2016-10-14

description: >
  A HOT to create Virtuozzo Storage (VStorage) Cluster consisting of five instances: three
  of wich are Meta Data servers (MDS) and all five instances are chunk servers (CS).
  VStorage is software defined distributed storage, which allows you to build fault-tolerant,
  multi-machine storage clusters using existing or off-the-shelf hardware to enable highly
  flexible, distributed storage that is scalable to your needs, and comes with built-in
  replication to ensure the safety of your data. Read more at [1].
  [1] https://virtuozzo.com/products/virtuozzo-storage/

parameters:

  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
    default: test_key

  instance_type:
    type: string
    description: Instance type for all servers
    default: vzip
    constraints:
      - allowed_values: [vzip, virtuozzo]
        description: instance_type must have an ephemeral disk

  image_id:
    type: string
    description: >
      Name or ID of the image to use for the VStorage servers.
      They should be build from Virtuozzo distribution.
      See disk image builder help.
    default: vz7-vm

  cluster_name:
    type: string
    description: VStorage cluster name
    constraints:
      - length: { min: 1, max: 64 }
        description: cluster name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          cluster_name must begin with a letter and contain only alphanumeric
          characters

  cluster_password:
    type: string
    description: Newly created VStorage Cluster admin account password
    hidden: true


resources:
  MetaDataServer1:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            yum -y install vstorage-metadata-server vstorage-chunk-server vstorage-client

            if [[ ! -d /vstorage ]]; then
                mkdir /vstorage
                mount /dev/sdb /vstorage/cluster_name-cs
            fi

            if ! echo cluster_password | vstorage -c cluster_name auth-node -P ; then
                echo cluster_password | vstorage -c cluster_name make-mds -I -a storage_ipaddr -r /vstorage/cluster_name-mds -P
            else
                if ! vstorage -c cluster_name list-services -M | grep -q /vstorage/cluster_name-mds; then
                    vstorage -c cluster_name make-mds -a storage_ipaddr -r /vstorage/cluster_name-mds
                fi
            fi

            if ! vstorage -c cluster_name list-services -C | grep -q /vstorage/cluster_name-cs; then
                vstorage -c cluster_name make-cs -r /vstorage/cluster_name-cs
            fi

            systemctl start vstorage-mdsd.target
            systemctl start vstorage-csd.target

          params:
            cluster_name: { get_param: cluster_name }
            cluster_password: { get_param: cluster_password }
            storage_ipaddr: { get_attr: [MetaDataServer1, networks, storage, 0] }

  MetaDataServer2:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            yum -y install vstorage-metadata-server vstorage-chunk-server vstorage-client

            if [[ ! -d /vstorage ]]; then
                mkdir /vstorage
                mount /dev/sdb /vstorage/cluster_name-cs
            fi

            if ! echo cluster_password | vstorage -c cluster_name auth-node -P ; then
                echo cluster_password | vstorage -c cluster_name make-mds -I -a storage_ipaddr -r /vstorage/cluster_name-mds -P
            else
                if ! vstorage -c cluster_name list-services -M | grep -q /vstorage/cluster_name-mds; then
                    vstorage -c cluster_name make-mds -a storage_ipaddr -r /vstorage/cluster_name-mds
                fi
            fi

            if ! vstorage -c cluster_name list-services -C | grep -q /vstorage/cluster_name-cs; then
                vstorage -c cluster_name make-cs -r /vstorage/cluster_name-cs
            fi

            systemctl start vstorage-mdsd.target
            systemctl start vstorage-csd.target

          params:
            cluster_name: { get_param: cluster_name }
            cluster_password: { get_param: cluster_password }
            storage_ipaddr: { get_attr: [MetaDataServer2, networks, storage, 0] }

  MetaDataServer3:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            yum -y install vstorage-metadata-server vstorage-chunk-server vstorage-client

            if [[ ! -d /vstorage ]]; then
                mkdir /vstorage
                mount /dev/sdb /vstorage/cluster_name-cs
            fi

            if ! echo cluster_password | vstorage -c cluster_name auth-node -P ; then
                echo cluster_password | vstorage -c cluster_name make-mds -I -a storage_ipaddr -r /vstorage/cluster_name-mds -P
            else
                if ! vstorage -c cluster_name list-services -M | grep -q /vstorage/cluster_name-mds; then
                    vstorage -c cluster_name make-mds -a storage_ipaddr -r /vstorage/cluster_name-mds
                fi
            fi

            if ! vstorage -c cluster_name list-services -C | grep -q /vstorage/cluster_name-cs; then
                vstorage -c cluster_name make-cs -r /vstorage/cluster_name-cs
            fi

            systemctl start vstorage-mdsd.target
            systemctl start vstorage-csd.target

          params:
            cluster_name: { get_param: cluster_name }
            cluster_password: { get_param: cluster_password }
            storage_ipaddr: { get_attr: [MetaDataServer3, networks, storage, 0] }


  ChunkServer1:
    type: OS::Nova::Server
    depends_on: [ MetaDataServer1, MetaDataServer2, MetaDataServer3 ]
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            yum -y install vstorage-chunk-server vstorage-client

            if [[ ! -d /vstorage ]]; then
                mkdir /vstorage
                mount /dev/sdb /vstorage/cluster_name-cs
            fi

            if ! vstorage -c cluster_name list-services -C | grep -q /vstorage/cluster_name-cs; then
                vstorage -c cluster_name make-cs -r /vstorage/cluster_name-cs
            fi

            echo cluster_password | vstorage -c cluster_name auth-node -P

            systemctl start vstorage-csd.target

          params:
            cluster_name: { get_param: cluster_name }
            cluster_password: { get_param: cluster_password }
            storage_ipaddr: { get_attr: [ChunkServer1, networks, storage, 0] }

  ChunkServer2:
    type: OS::Nova::Server
    depends_on: [ MetaDataServer1, MetaDataServer2, MetaDataServer3 ]
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            yum -y install vstorage-chunk-server vstorage-client

            if [[ ! -d /vstorage ]]; then
                mkdir /vstorage
                mount /dev/sdb /vstorage/cluster_name-cs
            fi

            if ! vstorage -c cluster_name list-services -C | grep -q /vstorage/cluster_name-cs; then
                vstorage -c cluster_name make-cs -r /vstorage/cluster_name-cs
            fi

            echo cluster_password | vstorage -c cluster_name auth-node -P

            systemctl start vstorage-csd.target

          params:
            cluster_name: { get_param: cluster_name }
            cluster_password: { get_param: cluster_password }
            storage_ipaddr: { get_attr: [ChunkServer2, networks, storage, 0] }

  ChunkServer3:
    type: OS::Nova::Server
    depends_on: [ MetaDataServer1, MetaDataServer2, MetaDataServer3 ]
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            yum -y install vstorage-chunk-server vstorage-client

            if [[ ! -d /vstorage ]]; then
                mkdir /vstorage
                mount /dev/sdb /vstorage/cluster_name-cs
            fi

            if ! vstorage -c cluster_name list-services -C | grep -q /vstorage/cluster_name-cs; then
                vstorage -c cluster_name make-cs -r /vstorage/cluster_name-cs
            fi

            echo cluster_password | vstorage -c cluster_name auth-node -P

            systemctl start vstorage-csd.target

          params:
            cluster_name: { get_param: cluster_name }
            cluster_password: { get_param: cluster_password }
            storage_ipaddr: { get_attr: [ChunkServer3, networks, storage, 0] }


